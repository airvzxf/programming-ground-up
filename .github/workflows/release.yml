name: CI - Release books

on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  build:
    env:
      VALGRIND_HOME: "$HOME/valgrind"
      VALGRIND_LIB: "$HOME/valgrind/lib/valgrind"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache valgrind
          uses: actions/cache@v1.0.3
          id: cache-valgrind
          with:
            path: "${{env.VALGRIND_HOME}}"
            key: ${{secrets.VALGRIND_VERSION}}

      - name: Install Valgrind
          env:
            CACHE_EXISTS: "${{steps.cache-valgrind.outputs.cache-hit}}"
            VALGRIND_SOURCE: "https://sourceware.org/ftp/valgrind/valgrind-${{secrets.VALGRIND_VERSION}}.tar.bz2"
          run: |
            if [[ "$CACHE_EXISTS" == 'true' ]]; then
              echo "Using Cached version..."
            else
              echo "Install from source..."
              sudo apt-get update
              curl -sSL "$VALGRIND_SOURCE" -o - | tar -xjv --one-top-level=valgrind --strip-components=1
              cd valgrind
              ./configure --prefix="$VALGRIND_HOME"
              make -j
              make install
              sudo apt-get install -y texlive-latex-extra && \
              wget https://github.com/jgm/pandoc/releases/download/2.11.2/pandoc-2.11.2-1-amd64.deb && \
              sudo dpkg -i pandoc-2.11.2-1-amd64.deb && \
              rm -f pandoc-2.11.2-1-amd64.deb
            fi
            echo "::add-path::$VALGRIND_HOME/bin"

#      - name: Install packages
#        if: steps.cache.outputs.cache-hit != 'true'
#        run: |
#          sudo apt-get install -y texlive-latex-extra && \
#          wget https://github.com/jgm/pandoc/releases/download/2.11.2/pandoc-2.11.2-1-amd64.deb && \
#          sudo dpkg -i pandoc-2.11.2-1-amd64.deb && \
#          rm -f pandoc-2.11.2-1-amd64.deb

      - name: Generate release files and commit in GitHub
        run: |
          cd ./src/programming-from-the-ground-up && \
          ./make.sh && \
          cd ../../ && \
          git config --global user.name 'Israel Roldan' && \
          git config --global user.email 'israel.alberto.rv@gmail.com' && \
          git add . && \
          git commit -m "Automated Release." && \
          git push
