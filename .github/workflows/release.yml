name: CI - Release books

on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  build:
    env:
      PACKAGES_HOME: "/home/runner/cache-linux/"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: /home/runner/cache-linux/
          key: ${{ runner.os }}-cache-packages-v1.12

      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          mkdir -p /home/runner/cache-linux/
          echo "# --------------------------------------------------------"
          echo "# Install packages"
          sudo apt-get install -y texlive-latex-extra
          wget -q https://github.com/jgm/pandoc/releases/download/2.11.2/pandoc-2.11.2-1-amd64.deb
          sudo dpkg -i pandoc-2.11.2-1-amd64.deb
          rm -f pandoc-2.11.2-1-amd64.deb
          mkdir -p /home/runner/cache-linux/
          packages=( pandoc texlive-latex-extra fonts-lmodern fonts-texgyre libkpathsea6 libpoppler73 libpotrace0 libptexenc1 libsynctex1 libtexlua52 libtexluajit2 libzzip-0-13 lmodern preview-latex-style t1utils tex-gyre texlive-base texlive-binaries texlive-fonts-recommended texlive-latex-base texlive-latex-recommended texlive-pictures texlive-plain-generic tipa perl-tk xpdf-reader pdf-viewer texlive-fonts-recommended-doc texlive-latex-base-doc icc-profiles libfile-which-perl libspreadsheet-parseexcel-perl texlive-latex-extra-doc texlive-latex-recommended-doc texlive-pstricks dot2tex prerex ruby-tcltk libtcltk-ruby texlive-pictures-doc vprerex )
          for package in ${packages[@]}; do
            echo "package: $package"
            dpkg -L $package | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory /home/runner/cache-linux/
          done
          ls -lha /home/runner/cache-linux/
          echo "# --------------------------------------------------------"

      - name: Copy cached packages
        if: steps.cache-packages.outputs.cache-hit == 'true'
        run: |
          echo "# --------------------------------------------------------"
          echo "# Using Cached packages"
          ls -lha /home/runner/cache-linux/
          sudo cp --verbose --force --recursive /home/runner/cache-linux/* /
          echo "# --------------------------------------------------------"

      - name: Generate release files and commit in GitHub
        run: |
          cd ./src/programming-from-the-ground-up
          ./make.sh
          cd ../../
          git config --global user.name 'Israel Roldan'
          git config --global user.email 'israel.alberto.rv@gmail.com'
          git add .
          git status
          ls -lha release/
#          cd ./src/programming-from-the-ground-up
#          ./make.sh
#          cd ../../
#          git config --global user.name 'Israel Roldan'
#          git config --global user.email 'israel.alberto.rv@gmail.com'
#          git add .
#          git commit -m "Automated Release."
#          git push
