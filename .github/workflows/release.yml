name: CI - Release books

on:
  release:
    types: [released]
  workflow_dispatch:

jobs:
  build:
    env:
      PACKAGES_HOME: "/home/runner/cache-linux/"
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2

      - name: Cache packages
        id: cache-packages
        uses: actions/cache@v2
        with:
          path: /home/runner/cache-linux/
          key: ${{ runner.os }}-cache-packages-v1.20

      - name: Install packages
        if: steps.cache-packages.outputs.cache-hit != 'true'
        run: |
          SOURCE=${HOME}/cache-linux
          echo "# --------------------------------------------------------"
          echo "# Where am I?"
          pwd
          echo "HOME: ${HOME}"
          echo "SOURCE: ${SOURCE}"
          echo "# --------------------------------------------------------"
          echo "# APT update"
          sudo apt update
          echo "# --------------------------------------------------------"
          echo "# Install tools"
          sudo rm -f /var/lib/apt/lists/lock
          sudo apt install -y backintime-common wget vim
          mkdir -p "${HOME}"/.config/backintime/
          cp config "${HOME}"/.config/backintime/
          mkdir -p "${HOME}"/.local/share/backintime/anacron/
          touch "${HOME}"/.local/share/backintime/anacron/1_Main_profile
          mkdir -p "${HOME}"/snapshots/
          echo "# --------------------------------------------------------"
          echo "# Snapshots"
          export PYTHONIOENCODING=utf8
          sudo backintime --debug check-config
          echo "# --------------------------------------------------------"
          echo "# Take the first snapshot"
          sudo backintime --debug backup
          echo "# --------------------------------------------------------"
          echo "# Install pandoc and dependencies"
          sudo apt install -y texlive-latex-extra
          wget -q https://github.com/jgm/pandoc/releases/download/2.11.2/pandoc-2.11.2-1-amd64.deb
          sudo dpkg -i pandoc-2.11.2-1-amd64.deb
          rm -f pandoc-2.11.2-1-amd64.deb
          echo "# --------------------------------------------------------"
          echo "# Take the second snapshot"
          sudo backintime --debug backup
          echo "# --------------------------------------------------------"
          echo "# Makes the cache directory"
          rm -fR "${SOURCE}"
          cp -a "${HOME}"/snapshots/backintime/MyHostName/root/1/last_snapshot/backup "${HOME}"
          mv backup "${SOURCE}"
          ls -lha "${SOURCE}"
          echo "# --------------------------------------------------------"

      - name: Copy cached packages
        if: steps.cache-packages.outputs.cache-hit == 'true'
        run: |
          echo "# --------------------------------------------------------"
          echo "# Using Cached packages"
          ls -lha /home/runner/cache-linux/
          sudo cp --force --recursive /home/runner/cache-linux/. /
          echo "# --------------------------------------------------------"

      - name: Generate release files and commit in GitHub
        run: |
          echo "# --------------------------------------------------------"
          echo "# Generating release files"
          cd ./src/programming-from-the-ground-up
          ./make.sh
          cd ../../
          git config --global user.name 'Israel Roldan'
          git config --global user.email 'israel.alberto.rv@gmail.com'
          git add .
          git status
          ls -lha release/
          echo "# --------------------------------------------------------"
#          cd ./src/programming-from-the-ground-up
#          ./make.sh
#          cd ../../
#          git config --global user.name 'Israel Roldan'
#          git config --global user.email 'israel.alberto.rv@gmail.com'
#          git add .
#          git commit -m "Automated Release."
#          git push
